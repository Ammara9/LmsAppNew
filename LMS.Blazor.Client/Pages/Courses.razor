@page "/courses"
@rendermode InteractiveWebAssembly

@using Microsoft.AspNetCore.Components
@using LMS.Blazor.Client.Services
@using LMS.Shared.DTOs
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization

@attribute [Authorize]

<h1>Courses</h1>

<button class="btn btn-primary mb-3 d-block" @onclick="CallAPIAsync">Refresh</button>

@if (courses == null)
{
    <p class="text-center">Refresh to get courses</p>
}
else
{
    <!-- Modify the row-cols-md to 4 to show 4 cards per row on medium screens and above -->
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4">
        @foreach (var item in courses)
        {
            <div class="col">
                <div class="card border-secondary">
                    <div class="card-header">
                        <h3 class="card-title fw-bold text-center">@item.Name</h3>
                    </div>
                    <div class="card-body">
                        <p class="card-text"><strong>Description:</strong> @item.Description</p>
                        <p class="card-text"><strong>ID:</strong> @item.Id</p>

                        <div class="d-flex justify-content-center mb-3">
                            <a href="/editcourse" class="btn btn-info mx-2">Edit Course</a>
                            <a href="/deletecourse" class="btn btn-danger mx-2" @* @onclick="() => DeleteCourse(item.Id) *@">Delete Course</a>
                        </div>
                        <div class="d-flex justify-content-center">
                            <a href="/registerstudent" class="btn btn-success mx-2">Add Student</a>
                            <a href="/module" class="btn btn-warning mx-2">Add Module</a>
                        </div>

                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<CourseDto>? courses;
    [Inject]
    private IApiService _apiService { get; set; } = default!;
    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;

    private async Task CallAPIAsync()
    {
        courses = (await _apiService.CallApiAsync<IEnumerable<CourseDto>>("api/courses"))?.ToList() ?? [];
    }

    private void EditCourse(int id)
    {
        // Implement the Edit Course logic here
    }

    private void DeleteCourse(int id)
    {
        // Implement the Delete Course logic here
    }

    private void AddStudent(int id)
    {
        // Implement the Add Student logic here
    }

    private void AddModule(int id)
    {
        // Implement the Add Module logic here
    }
}
